apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-rollout
spec:
  workspaces:
    - name: shared-workspace
    - name: maven-settings-cm
  params:
    - name: app-name
      type: string
      description: name of the deployment to be patched
      default: "petclinic"
    - name: git-url
      type: string
      description: url of the git repo for the code of deployment
      default: "https://github.com/pittar/spring-petclinic.git"
    - name: git-revision
      type: string
      description: revision to be used from repo of the code for deployment
      default: "log4j"
    - name: acs-secret
      description: Name of the secret with the central endpoint and api token.
      default: "roxsecrets"
  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: $(params.git-url)
        - name: subdirectory
          value: ""
        - name: deleteExisting
          value: "true"
        - name: revision
          value: $(params.git-revision)
    - name: mvn-build
      taskRef:
        name: maven
        kind: Task
      runAfter:
        - fetch-repository 
      params:
        - name: GOALS
          value: ["clean", "deploy", "sonar:sonar"]
        - name: MAVEN_REPO_CONFIG_SECRET
          value: nexus-secret
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: maven-settings
          workspace: maven-settings-cm
    - name: s2i-build
      taskRef:
        #name: s2i-binary-build
        name: binary-s2i
        kind: Task
      runAfter:
        - mvn-build 
      params:
        - name: file
          value: "$(workspaces.source.path)/target/app.jar"
        - name: buildconfig
          value: "$(params.app-name)-binary-build"
#         - name: BUILD_NAME
#           value: "$(params.app-name)-binary-build"
#         - name: BINARY_PATH
#           value: "$(workspaces.source.path)/target/app.jar"
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: acs-scan-image
      taskRef:
        name: rox-image-scan
        kind: Task
      runAfter:
        - s2i-build
      params:
        - name: rox_central_endpoint
          value: $(params.acs-secret)
        - name: rox_api_token
          value: $(params.acs-secret)
        - name: image
          value: image-registry.openshift-image-registry.svc:5000/petclinic-cicd/petclinic@$(tasks.s2i-build.results.digest)
        - name: output_format
          value: table
    - name: acs-check-image
      taskRef:
        name: rox-image-check
        kind: Task
      runAfter:
        - acs-scan-image
      params:
        - name: rox_central_endpoint
          value: $(params.acs-secret)
        - name: rox_api_token
          value: $(params.acs-secret)
        - name: image
          value: image-registry.openshift-image-registry.svc:5000/petclinic-cicd/petclinic@$(tasks.s2i-build.results.digest)
       # Uncomment when "when" is scoped to task in Pipelines 1.6
       # when:
       #   - input: "$(params.acs-secret)"
       #     operator: notin
       #     values: ["ignore"]
    - name: tag-dev
      taskRef:
        name: openshift-client
        kind: ClusterTask
      runAfter:
        - acs-check-image
      params:
        - name: SCRIPT
          value: "oc tag $(params.app-name):latest $(params.app-name):dev"
    - name: rollout-dev
      taskRef:
        name: rollout-restart
        kind: Task
      runAfter:
        - tag-dev
      params:
        - name: APP_NAME
          value: "$(params.app-name)"
        - name: NAMESPACE
          value: "$(params.app-name)-dev"
    - name: tag-test
      taskRef:
        name: openshift-client
        kind: ClusterTask
      runAfter:
        - rollout-dev
      params:
        - name: SCRIPT
          value: "oc tag $(params.app-name):dev $(params.app-name):test"
    - name: rollout-test
      taskRef:
        name: rollout-restart
        kind: Task
      runAfter:
        - tag-test
      params:
        - name: APP_NAME
          value: "$(params.app-name)"
        - name: NAMESPACE
          value: "$(params.app-name)-test"
